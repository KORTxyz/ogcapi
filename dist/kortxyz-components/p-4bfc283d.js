import{c as e,g as r}from"./p-3e8ff66b.js";var t=e((function(e,r){function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){return void 0===n&&(n={}),t({type:"Point",coordinates:e},r,n)}function o(e,r,n){void 0===n&&(n={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function i(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function d(e){return e%(2*Math.PI)*180/Math.PI}function v(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)&&!/^\s*$/.test(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:r.earthRadius/1.0936},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1/1.0936},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r){switch(e){case"Point":return n(r).geometry;case"LineString":return i(r).geometry;case"Polygon":return o(r).geometry;case"MultiPoint":return l(r).geometry;case"MultiLineString":return s(r).geometry;case"MultiPolygon":return u(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=o,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.lineString=i,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.featureCollection=a,r.multiLineString=s,r.multiPoint=l,r.multiPolygon=u,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return d(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=d,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=r.areaFactors[t];if(!o)throw new Error("invalid original units");var i=r.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},r.isNumber=v,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!v(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")},r.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},r.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},r.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},r.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},r.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},r.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},r.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}})),n=e((function(e,r){function n(e,r,t){if(null!==e)for(var o,i,a,s,l,u,c,f,d=0,v=0,m=e.type,y="FeatureCollection"===m,p="Feature"===m,g=y?e.features.length:1,h=0;h<g;h++){l=(f=!!(c=y?e.features[h].geometry:p?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var w=0;w<l;w++){var b=0,P=0;if(null!==(s=f?c.geometries[w]:c)){u=s.coordinates;var M=s.type;switch(d=!t||"Polygon"!==M&&"MultiPolygon"!==M?0:1,M){case null:break;case"Point":if(!1===r(u,v,h,b,P))return!1;v++,b++;break;case"LineString":case"MultiPoint":for(o=0;o<u.length;o++){if(!1===r(u[o],v,h,b,P))return!1;v++,"MultiPoint"===M&&b++}"LineString"===M&&b++;break;case"Polygon":case"MultiLineString":for(o=0;o<u.length;o++){for(i=0;i<u[o].length-d;i++){if(!1===r(u[o][i],v,h,b,P))return!1;v++}"MultiLineString"===M&&b++,"Polygon"===M&&P++}"Polygon"===M&&b++;break;case"MultiPolygon":for(o=0;o<u.length;o++){for(P=0,i=0;i<u[o].length;i++){for(a=0;a<u[o][i].length-d;a++){if(!1===r(u[o][i][a],v,h,b,P))return!1;v++}P++}b++}break;case"GeometryCollection":for(o=0;o<s.geometries.length;o++)if(!1===n(s.geometries[o],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function i(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function a(e,r){var t,n,o,i,a,s,l,u,c,f,d=0,v="FeatureCollection"===e.type,m="Feature"===e.type,y=v?e.features.length:1;for(t=0;t<y;t++){for(u=v?e.features[t].properties:m?e.properties:{},c=v?e.features[t].bbox:m?e.bbox:void 0,f=v?e.features[t].id:m?e.id:void 0,a=(l=!!(s=v?e.features[t].geometry:m?e.geometry:e)&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<a;o++)if(null!==(i=l?s.geometries[o]:s))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(i,d,u,c,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===r(i.geometries[n],d,u,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,d,u,c,f))return!1;d++}}function s(e,r){a(e,(function(e,n,o,i,a){var s,l=null===e?null:e.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==r(t.feature(e,o,{bbox:i,id:a}),n,0)&&void 0}switch(l){case"MultiPoint":s="Point";break;case"MultiLineString":s="LineString";break;case"MultiPolygon":s="Polygon"}for(var u=0;u<e.coordinates.length;u++)if(!1===r(t.feature({type:s,coordinates:e.coordinates[u]},o),n,u))return!1}))}function l(e,r){s(e,(function(e,o,i){var a=0;if(e.geometry){var s=e.geometry.type;if("Point"!==s&&"MultiPoint"!==s){var l,u=0,c=0,f=0;return!1!==n(e,(function(n,s,d,v,m){if(void 0===l||o>u||v>c||m>f)return l=n,u=o,c=v,f=m,void(a=0);var y=t.lineString([l,n],e.properties);if(!1===r(y,o,i,m,a))return!1;a++,l=n}))&&void 0}}}))}function u(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,n,o){if(null!==e.geometry){var i=e.geometry.coordinates;switch(e.geometry.type){case"LineString":if(!1===r(e,n,o,0,0))return!1;break;case"Polygon":for(var a=0;a<i.length;a++)if(!1===r(t.lineString(i[a],e.properties),n,o,a))return!1}}}))}Object.defineProperty(r,"__esModule",{value:!0}),r.coordEach=n,r.coordReduce=function(e,r,t,o){var i=t;return n(e,(function(e,n,o,a,s){i=0===n&&void 0===t?e:r(i,e,n,o,a,s)}),o),i},r.propEach=o,r.propReduce=function(e,r,t){var n=t;return o(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n},r.featureEach=i,r.featureReduce=function(e,r,t){var n=t;return i(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n},r.coordAll=function(e){var r=[];return n(e,(function(e){r.push(e)})),r},r.geomEach=a,r.geomReduce=function(e,r,t){var n=t;return a(e,(function(e,o,i,a,s){n=0===o&&void 0===t?e:r(n,e,o,i,a,s)})),n},r.flattenEach=s,r.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,o,i){n=0===o&&0===i&&void 0===t?e:r(n,e,o,i)})),n},r.segmentEach=l,r.segmentReduce=function(e,r,t){var n=t,o=!1;return l(e,(function(e,i,a,s,l){n=!1===o&&void 0===t?e:r(n,e,i,a,s,l),o=!0})),n},r.lineEach=u,r.lineReduce=function(e,r,t){var n=t;return u(e,(function(e,o,i,a){n=0===o&&void 0===t?e:r(n,e,o,i,a)})),n},r.findSegment=function(e,r){if(!t.isObject(r=r||{}))throw new Error("options is invalid");var n,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,s=r.segmentIndex||0,l=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,n=e.features[o].geometry;break;case"Feature":l=l||e.properties,n=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=e;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var u=n.coordinates;switch(n.type){case"Point":case"MultiPoint":return null;case"LineString":return s<0&&(s=u.length+s-1),t.lineString([u[s],u[s+1]],l,r);case"Polygon":return a<0&&(a=u.length+a),s<0&&(s=u[a].length+s-1),t.lineString([u[a][s],u[a][s+1]],l,r);case"MultiLineString":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s-1),t.lineString([u[i][s],u[i][s+1]],l,r);case"MultiPolygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),s<0&&(s=u[i][a].length-s-1),t.lineString([u[i][a][s],u[i][a][s+1]],l,r)}throw new Error("geojson is invalid")},r.findPoint=function(e,r){if(!t.isObject(r=r||{}))throw new Error("options is invalid");var n,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,s=r.coordIndex||0,l=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,n=e.features[o].geometry;break;case"Feature":l=l||e.properties,n=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":n=e;break;default:throw new Error("geojson is invalid")}if(null===n)return null;var u=n.coordinates;switch(n.type){case"Point":return t.point(u,l,r);case"MultiPoint":return i<0&&(i=u.length+i),t.point(u[i],l,r);case"LineString":return s<0&&(s=u.length+s),t.point(u[s],l,r);case"Polygon":return a<0&&(a=u.length+a),s<0&&(s=u[a].length+s),t.point(u[a][s],l,r);case"MultiLineString":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s),t.point(u[i][s],l,r);case"MultiPolygon":return i<0&&(i=u.length+i),a<0&&(a=u[i].length+a),s<0&&(s=u[i][a].length-s),t.point(u[i][a][s],l,r)}throw new Error("geojson is invalid")}}));const o=r(e((function(e,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){var r=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,(function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}})));function i(e,r,t){return(e||"")+(r?" "+r:"")+(t?" "+t:"")}function a(e){const r=e.links.filter((e=>"tiles"==e.rel))[0];let t={version:8};if(t.name=e.name,t.metadata={"mapbox:autocomposite":!0},t.glyphs="mapbox://fonts/mapbox/{fontstack}/{range}.pbf",t.sources={tiles:{type:"application/vnd.mapbox-vector-tile"==r.type?"vector":"raster",tiles:[r.href.replace("{tileMatrixSetId}","google").replace("{tileMatrixId}","{z}").replace("{tileRow}","{x}").replace("{tileCol}","{y}")],bounds:e.extent.spatial,tileSize:"application/vnd.mapbox-vector-tile"==r.type?512:256,attribution:"",minzoom:0,maxzoom:"application/vnd.mapbox-vector-tile"==r.type?14:22},test:{type:"raster",tiles:["https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"],bounds:e.extent.spatial,tileSize:256,attribution:""}},"application/vnd.mapbox-vector-tile"==r.type){const r="#"+("00000"+(Math.random()*(1<<24)|0).toString(16)).slice(-6);t.layers=[{id:"tiles-raster",type:"raster",source:"test",minzoom:0,maxzoom:22,paint:{"raster-saturation":-.8}},{id:"tiles-polygons",type:"fill",source:"tiles","source-layer":e.title,filter:["==","$type","Polygon"],layout:{},paint:{"fill-opacity":["case",["boolean",["feature-state","hover"],!1],1,.7],"fill-color":r}},{id:"tiles-polygons-outline",type:"line",source:"tiles","source-layer":e.title,filter:["==","$type","Polygon"],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":r,"line-width":["case",["boolean",["feature-state","hover"],!1],2,1],"line-opacity":.75}},{id:"tiles-lines",type:"line",source:"tiles","source-layer":e.title,filter:["==","$type","LineString"],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":r,"line-width":["case",["boolean",["feature-state","hover"],!1],4,1.5],"line-opacity":["case",["boolean",["feature-state","hover"],!1],1,.7]}},{id:"tiles-pts",type:"circle",source:"tiles","source-layer":e.title,filter:["==","$type","Point"],paint:{"circle-color":r,"circle-radius":2.5,"circle-opacity":["case",["boolean",["feature-state","hover"],!1],1,.7]}}]}else t.layers=[{id:"tiles-raster",type:"raster",source:"tiles",minzoom:0,maxzoom:22}];return t}function s(e){let r={version:8,name:"test"};r.metadata={bbox:o(e)},r.sources={geojson:{type:"geojson",data:e},test:{type:"raster",tiles:["https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"],bounds:o(e),tileSize:256,attribution:""}};const t="#"+("00000"+(Math.random()*(1<<24)|0).toString(16)).slice(-6);return r.layers=[{id:"tiles-raster",type:"raster",source:"test",minzoom:0,maxzoom:22,paint:{"raster-saturation":-.8}},{id:"tiles-polygons",type:"fill",source:"geojson",filter:["==","$type","Polygon"],layout:{},paint:{"fill-opacity":["case",["boolean",["feature-state","hover"],!1],1,.7],"fill-color":t}},{id:"tiles-polygons-outline",type:"line",source:"geojson",filter:["==","$type","Polygon"],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":t,"line-width":["case",["boolean",["feature-state","hover"],!1],2,1],"line-opacity":.75}},{id:"tiles-lines",type:"line",source:"geojson",filter:["==","$type","LineString"],layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":t,"line-width":["case",["boolean",["feature-state","hover"],!1],4,1.5],"line-opacity":["case",["boolean",["feature-state","hover"],!1],1,.7]}},{id:"tiles-pts",type:"circle",source:"geojson",filter:["==","$type","Point"],paint:{"circle-color":t,"circle-radius":2.5,"circle-opacity":["case",["boolean",["feature-state","hover"],!1],1,.7]}}],r}async function l(e){const r=[...e].map(await u);return await Promise.all(r)}async function u(e){let r;switch(e.name.split(".").pop()){case"geojson":r=await async function(e){var r=await e.text();return JSON.parse(r)}(e);break;default:console.error("fileType not supportet")}return{name:e.name,data:r}}export{s as a,i as f,l as r,a as s}